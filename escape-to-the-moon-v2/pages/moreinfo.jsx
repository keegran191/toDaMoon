import Nav from '../components/Navbar'
import Head from 'next/head'
import style from '../styles/RegisLogin.module.css'
import Link from 'next/link'
import { useRouter } from 'next/router'
import Foot from '../components/Foot'
import Axios from 'axios';
import { useState, useEffect, createRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import Select from 'react-select'
import { parse } from 'cookie';
import UniversalModal from '../components/Modal.js';
export default function ConfirmOrder ({ cookies }) {
    const { fname, userId } = cookies;
    const [stockAmount, setStockAmount] = useState(0)
    const ImageArr = ["1689408697472.jpg","1689408698642.jpg","1689408700543.jpg","1689408701654.jpg","1689408702962.jpg"]
    const [ImageSelect, setImageSelect] = useState('')

    useEffect(() => {
        GetBasketAmount(userId)
    }, [userId]);

    const GetBasketAmount = (userId) => {
        Axios.get(`https://escapetothemoon.lol/api/basket/amount?userId=${userId}`)
          .then((response) => {
            const { data } = response;
            setStockAmount(data.totalStockAmount || 0); // Assuming the response is a number representing the total stock amount
          })
          .catch((error) => {
            console.error('Error fetching basket amount:', error);
            setStockAmount(0); // Set a default value in case of an error
          });
      };  


    return (
        <div className='select-none min-h-screen flex flex-col'>
            <Head>
                <title>More Info</title>
                <link rel="icon" href="/ttmLogo.png"/>
                <link rel="preconnect" href="https://fonts.googleapis.com"/>
                <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin = "true"/>
                <link href="https://fonts.googleapis.com/css2?family=Kanit&display=swap" rel="stylesheet"/>
            </Head>
            <Nav name={fname} userid={userId} itemAmount={stockAmount.toString()}></Nav>
            <motion.div className='w-full h-full px-10 flex flex-col items-center sm:justify-center md:justify-start lg:justify-center md:mt-10 lg:mt-0'>
              <p className='text-2xl'>ESCAPE to The MOON ~ Roasted Coffee Bean</p>
              <p className='text-xl mt-2'>‡∏Å‡∏≤‡πÅ‡∏ü‡∏≠‡∏£‡∏≤‡∏ö‡∏¥‡∏Å‡πâ‡∏≤ 100% ‡∏Ñ‡∏±‡πà‡∏ß‡∏™‡∏î‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏°‡∏•‡πá‡∏î‡πÄ‡∏Å‡∏£‡∏î A ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏•‡πà‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏Å‡∏±‡∏ô ‡πÑ‡∏°‡πà‡∏Ñ‡∏•‡∏∞‡πÄ‡∏Å‡∏£‡∏î ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡πÅ‡∏ü‡∏î‡∏≥ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏•‡πá‡∏î‡πÅ‡∏ï‡∏Å‡∏´‡∏±‡∏Å ‡∏´‡∏£‡∏∑‡∏≠ ‡∏û‡∏¥‡∏Å‡∏≤‡∏£ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥ ‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ñ‡∏∏‡∏á</p>
              <p className='text-xl mt-2'>„äô ‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö ‡∏õ‡∏≤‡∏Å‡∏ó‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏î‡∏≠‡∏¢‡∏õ‡∏≤‡∏á‡∏Ç‡∏≠‡∏ô ‡∏à‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏•‡∏∞‡∏°‡∏≤‡∏Å‡πÜ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏±‡πà‡∏ß‡πÑ‡∏î‡πâ‡∏ö‡πà‡∏≠‡∏¢ ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î  ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤ ‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏™‡∏î ‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡∏î‡∏µ ‡∏Å‡∏•‡∏¥‡πà‡∏ô‡∏´‡∏≠‡∏° ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏±‡πà‡∏ß‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏°‡∏≠</p>
              <p className='text-xl mt-2'>üëâ ‡∏î‡∏≠‡∏¢‡∏õ‡∏≤‡∏á‡∏Ç‡∏≠‡∏ô ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢ ‡∏ñ‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏´‡∏•‡πà‡∏á‡πÄ‡∏û‡∏≤‡∏∞‡∏õ‡∏•‡∏π‡∏Å ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ‡∏Å‡∏≤‡πÅ‡∏ü‡∏≠‡∏£‡∏≤‡∏ö‡∏¥‡∏Å‡πâ‡∏≤‡πÅ‡∏´‡∏•‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ï‡πâ‡∏ô‡πÜ‡∏Ç‡∏≠‡∏á ‡∏à.‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢ ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Å‡∏≤‡πÅ‡∏ü‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢</p>
              <p className='text-xl mt-2'>üëâ ‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£‡∏Å‡∏≤‡πÅ‡∏ü‡∏à‡∏≤‡∏Å‡∏™‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡∏Å‡∏£‡∏≠‡∏á ‡πÅ‡∏õ‡∏£‡∏£‡∏π‡∏õ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏û‡∏¥‡∏ñ‡∏µ‡∏û‡∏¥‡∏ñ‡∏±‡∏ô‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô ‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡πà‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô  ‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏Å‡∏•‡∏¥‡πà‡∏ô ‡πÅ‡∏•‡∏∞ ‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏î‡πà‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏≠‡∏Å‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå</p>
              <motion.div className='w-full h-auto flex flex-col items-center justify-center mt-10 md:flex-row'>
                {ImageArr.map((imageUrl) => {
                  return <motion.div
                    key={imageUrl}
                    className='w-40 h-40 mx-2'
                    layoutId={imageUrl}
                    initial={{ scale: 0 }}
                    animate={{ scale: 1 }}
                    transition={{
                      type: "spring",
                      stiffness: 260,
                      damping: 20
                    }}
                  > 
                    <img className='w-full h-full' src={`/${imageUrl}`}></img>
                  </motion.div> 
                })}
              </motion.div>

              <motion.div className='w-full flex justify-center mt-10'>
                <Link href={'/store'}>
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="text-white bg-[#252525] hover:bg-[#252525] font-medium rounded-lg text-sm px-6 py-3 mb-20"
                    initial={{ scale: 0 }}
                      animate={{ scale: 1 }}
                      transition={{
                        type: "spring",
                        stiffness: 260,
                        damping: 20
                      }}
                  >
                    ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                  </motion.button>
                </Link>
              </motion.div>
            </motion.div>
            <Foot></Foot>
        </div>
    )
}

export async function getServerSideProps(context) {
    const cookies = parse(context.req.headers.cookie || '');
    return {
      props: {
        cookies,
      },
    };
}